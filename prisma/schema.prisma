// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  worldId String @unique()
  username String @unique()
  profilePicture String?
  pollsCreatedCount Int @default(0)
  createdAt DateTime @default(now())
  poll Poll[]
  
}


model Poll{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id])
  userId  Int 
  title String 
  description String?
  options Option[]
  tags Tag[]
  createdAt DateTime @default(now())
  startDate DateTime @default(now())
  endDate DateTime
  isAnonymous Boolean @default(false)

}

model Option {
  id      Int    @id @default(autoincrement())
  optionText     String 
  poll    Poll   @relation(fields: [pollId], references: [id])
  pollId  Int    
  votes  Vote[]
  createdAt  DateTime @default(now())
}

model Tag{
  id Int @id @default(autoincrement())
  content String?
  poll Poll[]

}

model Vote{
  id Int @id @default(autoincrement())
  weight Int 
  option Option @relation(fields: [optionId], references: [id])
  optionId  Int
  createdAt DateTime @default(now())
  proof String[] 
}